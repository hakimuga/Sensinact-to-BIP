/*
 * generated by Xtext
 */
package org.eclipse.sensinact.studio.language.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IGenerator
import org.eclipse.xtext.generator.IFileSystemAccess
import org.eclipse.sensinact.studio.language.sensinact.Sensinact
import ressources.utility.Utility

/**
 * Generates code from your model files on save.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#TutorialCodeGeneration
 */
class SensinactGenerator implements IGenerator {
	
	String taskname;
	
	override void doGenerate(Resource resource, IFileSystemAccess fsa) {


			for (e : resource.allContents.toIterable.filter(typeof(Sensinact))){


					fsa.generateFile( "TASK_" +  Utility.getFilename(resource.getURI()) + ".bip", e.compile)
					taskname= Utility.filename;
					fsa.generateFile( "TASK_" +  Utility.getFilename(resource.getURI())+ "_ports" + ".bip", e.compile_conn)
					}

		  
					
	}
	
	def compile(Sensinact sensinact) {
	'''
//VERIMAG ATOM GENERATION FOR THE TASK «Utility.filename»
atom type TASK_«Utility.filename» ()

		 // RESOURCE REFERENCES 
		 «FOR DSL_Resource : sensinact.getEca().getResources() » 
		 data int «DSL_Resource.getGatewayID()»_«DSL_Resource.getDeviceID()»_«DSL_Resource.getServiceID()»_«DSL_Resource.getResourceID()»	 
		 «ENDFOR» 
		
		 // NOTIFICATION PORTS
		 «Utility.getnotifyports(sensinact)»	
		 // SETTER PORT	 
 		 «Utility.getsettersports(sensinact)»	
 		 // GETTER PORT	    
 		 «Utility.getgettersports(sensinact)»
         // SILENT PORT		 
		 « Utility.getSilentPorts(sensinact)»
		 
			// PLACES DECLARATION
			place « Utility.getPlaces(sensinact)» G
			// SET INITIAL PLACE
    		initial to « Utility.getInitialPlaces(sensinact)»     	 « Utility.getnotification(sensinact)»
    		
		 // GET NOTIFICATION
    	 « Utility.getOnInterraction(sensinact)»
    	  
    	 // RECEIVE THE INPUTS    	 
    	 « Utility.getInterraction(sensinact)»
    	 
  	     	     	     	 
    	 « Utility.setIfElseStates(sensinact)»
		    
end
    
	'''		
    }
    
 def compile_conn(Sensinact sensinact) {
	'''
«Utility.getnotifyports(sensinact)»

«Utility.getsettersports(sensinact)»

«Utility.getgettersports(sensinact)»

	'''		
    }
}
